/*
 * 8_i2c_data_receive.c
 *
 *  Created on: Jul 2, 2025
 *      Author: user
 */
/*
 * When button on the master is pressed, master should read and display data from arduino slave connected first master has
 * to get the length of the data from the slave to read subsequent data from the slave.
 * 1. use i2c scl = 100kHz ( sm)
 * 2. Use internal pull resistors for sda and scl lines#include <string.h>
 */
#include "stm32f411xx.h"

#define MY_ADDR 0x61
#define SLAVE_ADDR 0x68

#define READ_LEN_COMMAND	0x51
#define READ_DATA_COMMAND	0X52


I2C_Handle_t I2C1Handle;

uint8_t rcvbuffer[32];

void delay(void)
{
	for(uint32_t i = 0 ; i < 500000/2; i++);
}


void I2C1_GPIO_Init(void)
{
	GPIO_Handle_t I2CPins;
	I2CPins.pGPIOx = GPIOB;
	I2CPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
	I2CPins.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
	I2CPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	I2CPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;
	I2CPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	// for SCL
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
	GPIO_Init(&I2CPins);

	// for SDA
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_7;
	GPIO_Init(&I2CPins);

}

void I2C1_Inits(void)
{
	I2C1Handle.pI2Cx = I2C1;
	I2C1Handle.I2C_Config.I2C_ACKControl = I2C_ACK_ENABLE;
	I2C1Handle.I2C_Config.I2C_DeviceAddress = MY_ADDR; // this is not needed here but you can give
	I2C1Handle.I2C_Config.I2C_FMDutyCycle = I2C_FM_DUTY_2; // not using fm you can keep anything here
	I2C1Handle.I2C_Config.I2C_SCLSpeed = I2C_SCL_SPEED_SM;

	I2C_Init(&I2C1Handle);

}

void GPIO_ButtonInit(void)
{
	GPIO_Handle_t Gpiobutton;

	Gpiobutton.pGPIOx = GPIOA;
	Gpiobutton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
	Gpiobutton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
	Gpiobutton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
	Gpiobutton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PU;

	GPIO_Init(&Gpiobutton);

}

int main(void)
{
	I2C1_GPIO_Init();

	GPIO_ButtonInit();

	I2C1_Inits();

	I2C_PerirpheralControl(I2C1, ENABLE);

	// ack bit is made 1 after PE = 1
	I2C1Handle.pI2Cx->CR1 |= (1 << I2C_CR1_ACK);

	while(1)
	{
	// wait for button pressed
	while( GPIO_ReadFromInputPin(GPIOA, GPIO_PIN_NO_0) );
	delay();

	// To send the first command to receive the len info
	uint8_t temp = READ_LEN_COMMAND;

	I2C_MasterSendData(&I2C1Handle, &temp, 1, SLAVE_ADDR, I2C_ENABLE_SR);

	uint8_t len;

	// Master receiving the len
	I2C_MasterReceiveData(&I2C1Handle, &len, 1, SLAVE_ADDR,I2C_ENABLE_SR);

	//To send the command to read the data
	temp = READ_DATA_COMMAND;

	I2C_MasterSendData(&I2C1Handle, &temp, 1, SLAVE_ADDR, I2C_ENABLE_SR);


	// Master receiving the data
	I2C_MasterReceiveData(&I2C1Handle, rcvbuffer, len, SLAVE_ADDR,I2C_DISABLE_SR);
	}

}



