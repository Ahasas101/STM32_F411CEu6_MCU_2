/*
 * YOUR MCU DOES NOT HAVE BACKUP SRAM REFER LECTURES FOR EXERCISE
 */




#include "stm32f4xx_hal.h"
#include <stdio.h>

void GpioSwoInit(void);
void button_init(void);

int main(void)
{
	GpioSwoInit();
	button_init();

	__HAL_RCC_PWR_CLK_ENABLE();


	printf("Hello\n");
	// To check how the processor got into reset mode
	if(__HAL_PWR_GET_FLAG(PWR_FLAG_SB) != RESET)
	{
		printf("Woke up from StandBy Mode\n");
	}
	HAL_PWR_EnableWakeUpPin(PWR_WAKEUP_PIN1);


	printf("Press the button to enter the StandBy Mode\n");
	while(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_2) != GPIO_PIN_RESET);
	//HAL_Delay(100);
	printf("Entering StandBy Mode...\n");
	HAL_PWR_EnterSTANDBYMode();
	// after the standby mode the processor will not start execution from here it will undergo reset handler and will start execution from the main

	while(1);


	}


void GpioSwoInit(void)
{
	__HAL_RCC_GPIOB_CLK_ENABLE();
	GPIO_InitTypeDef gpio_swo;
	gpio_swo.Mode = GPIO_MODE_AF_PP;
	gpio_swo.Pin = GPIO_PIN_3;
	gpio_swo.Alternate = GPIO_AF0_SWJ;
	gpio_swo.Pull = GPIO_NOPULL;
	gpio_swo.Speed = GPIO_SPEED_FREQ_LOW;
	HAL_GPIO_Init(GPIOB, &gpio_swo);

	// In order to save the power you must keep the other pins of the gpio's in analog mode
//	gpio_swo.Pin = GPIO_PIN_1 | GPIO_PIN_2  | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | \
//				GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | \
//				GPIO_PIN_0 | GPIO_PIN_14 | GPIO_PIN_15;
//	gpio_swo.Mode = GPIO_MODE_ANALOG;

//	HAL_GPIO_Init(GPIOB, &gpio_swo);
}

void button_init(void)
{
	__HAL_RCC_GPIOA_CLK_ENABLE();

	GPIO_InitTypeDef button;
	button.Pin = GPIO_PIN_2; // as you can't use the on board button because it is connected to PA0 which is the only wakeup pin
	button.Mode = GPIO_MODE_INPUT;
	button.Speed = GPIO_SPEED_FREQ_MEDIUM;
	button.Pull = GPIO_PULLUP;
	HAL_GPIO_Init(GPIOA, &button);


	// In order to save the power you must keep the other pins of the gpio's in analog mode

	// you cannpt change the state of pin 13 and pin 14 because they are used as swdio and swclk
//	button.Pin = GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6 | \
//				GPIO_PIN_7 | GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | \
//				 GPIO_PIN_15;
//
//	button.Mode = GPIO_MODE_ANALOG;
//
//	HAL_GPIO_Init(GPIOA, &button);
}
